tempo %>% ggplot() + geom_point(aes(x = n, y = wrap))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) + geom_point(aes(x = n, y = graham, color = "green"))
p <- tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) + geom_point(aes(x = n, y = graham, color = "green"))
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,10)
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,1000000)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) + geom_point(aes(x = n, y = graham, color = "green"))
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,1000)
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,10)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) + geom_point(aes(x = n, y = graham, color = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) + geom_point(aes(x = n, y = graham, color = "green"))+ stat_function(fun = fun.1) + stat_function(fun = fun.2)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) + geom_point(aes(x = n, y = graham, color = "green"))
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,1000000)
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,100)
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,10)
library(ggpubr)
library(pubr)
install.packages("ggpubr")
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
geom_line(aes(x = n, y = n*log(n), color = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
geom_line(aes(x = n, y = n*log(n), color = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
geom_line(aes(x = n, y = n*log(n)/1000000, color = "green"))
library(ggpubr)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr()
tempo <- tibble(n, "tempo (s)"= wrap, graham)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr()
tempo %>% ggplot() + geom_point(aes(x = n, y = "tempo (s)", color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr()
library(tidyverse)
library(ggpubr)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
fun.1 <- function(x) x^2
fun.2 <- function(x) x*log(x)
p + stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,10)
n = c(100000,
200000,
300000,
400000,
500000,
700000,
800000,
900000,
1000000)
wrap <- c(0.53,
1.20,
2.92,
3.60,
4.41,
7.29,
8.85,
9.39,
10.31)
graham <- c(0.10,
0.29,
0.63,
0.93,
1.26,
1.85,
2.22,
2.66,
2.96)
tempo <- tibble(n, wrap, graham)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr()
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr +
scale_color_manual(name = "Sexo", labels = c("Feminino", "Masculino"),
values = c("female" = "red", "male" = "blue"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
scale_color_manual(name = "Sexo", labels = c("Feminino", "Masculino"),
values = c("female" = "red", "male" = "blue"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
scale_color_manual(name = "Sexo", labels = c("Feminino", "Masculino"),
values = c("female" = "blue", "male" = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
scale_color_manual(name = "Sexo", labels = c("Feminino", "Masculino"),
values = c("wrap" = "blue", "graham" = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
scale_color_manual(name = "Algoritmo", labels = c("Embrulho", "Graham"),
values = c("wrap" = "blue", "graham" = "green"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Gráfico de Escalabilidade Empírica ")
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ")
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_manual(name = "Algoritmo", labels = c("Embrulho", "Graham"))
(1.85+2.22)/2
wrap <- c(0.53,
1.20,
2.92,
3.60,
4.41,
5.89,
7.29,
8.85,
9.39,
10.31)
graham <- c(0.10,
0.29,
0.63,
0.93,
1.26,
1.85,
2.04,
2.22,
2.66,
2.96)
tempo <- tibble(n, wrap, graham)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_manual(name = "Algoritmo", labels = c("Embrulho", "Graham"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ")
tempo <- tibble(n, wrap, graham)
n = c(100000,
200000,
300000,
400000,
500000,
600000,
700000,
800000,
900000,
1000000)
wrap <- c(0.53,
1.20,
2.92,
3.60,
4.41,
5.89,
7.29,
8.85,
9.39,
10.31)
graham <- c(0.10,
0.29,
0.63,
0.93,
1.26,
1.85,
2.04,
2.22,
2.66,
2.96)
tempo <- tibble(n, wrap, graham)
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ")
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_manual(name = "Dose", labels = c("A", "B"))
scale_color_manual(name = "Algoritmo", labels = c("Embrulho", "Graham"),
values = c("blue", "red"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_discrete(name = "Dose", labels = c("A", "B"))
tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_discrete(name = "Algoritmo", labels = c("Embrulho", "Graham"))
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(fun = fun.1) + stat_function(fun = fun.2) + xlim(0,10) +
theme_pubr()
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue", lty = 2),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubr()
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue"),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubr()
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue"),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubclean()
q
p<- tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubclean() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_discrete(name = "Algoritmo", labels = c("Embrulho", "Graham"))
p
p<- tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubr() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_discrete(name = "Algoritmo", labels = c("Embrulho", "Graham"))
p
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue"),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubclean()
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",linetype = "dashed"),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubclean()
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,20) +
theme_pubclean()
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo (s)") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Algoritmo", labels = c(expr(x log x), "Graham"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo (s)") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Algoritmo", labels = c("x log x", "x²"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",),fun = fun.1) + stat_function(aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo (s)") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Algoritmo", labels = c("x²","x log(x)"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo (s)") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Algoritmo", labels = c("x²","x log(x)"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo (s)") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Algoritmo", labels = c("x²","x log(x)"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo (s)") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Algoritmo", labels = c("x ²","x log(x)"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubclean()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
+ theme(axis. title. x = element_blank())+
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
+ theme(axis.title. x = element_blank())+
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
+ theme(axis.title.x = element_blank())+
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
theme(axis.title.x = element_blank())+
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.grid") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.axis") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.text") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.text") + rremove("y.text") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
gridExtra::grid.arrange(p,q,ncol =2)
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,15) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.text") + rremove("y.text") + rremove("ylab") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
gridExtra::grid.arrange(q,p,ncol =2)
gridExtra::grid.arrange(p,q,ncol =2)
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubr()+xlab("Tamanho da entrada") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.text") + rremove("y.text") + rremove("ylab") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
gridExtra::grid.arrange(p,q,ncol =2)
#x <-c(0.1, 0, 0.03, 0, 0.3, -0.2, -0.21, 0.57, 0.44, -0.5, 0, -0.03, 0.3, -0.57, 0.01)
x <-c(0, 1.5, 1, -0.5, 0, 0.42, 0.98, 1.02, 0.5, -0.22)
#x <- c(1.22, 0.40, -0.44, -0.32, 0)
#y <- c(0.37, -1.06, -0.55, 0, -0.1, -0.2, 0.05,0, 0, 0.03, 1.06, 0.62, 0.26, 0, 0.9)
y <- c(1, 0, -0.5, -0.5, 0, -0.35, 0.1, 0.75, 0.66, -0.1)
plot(x,y)
source('~/scc0223-proj1/grafico_pontos.r', echo=TRUE)
n = c(100000,
200000,
300000,
400000,
500000,
600000,
700000,
800000,
900000,
1000000)
wrap <- c(0.53,
1.20,
2.92,
3.60,
4.41,
5.89,
7.29,
8.85,
9.39,
10.31)
graham <- c(0.10,
0.29,
0.63,
0.93,
1.26,
1.85,
2.04,
2.22,
2.66,
2.96)
tempo <- tibble(n, wrap, graham)
p<- tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubclean() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_discrete(name = "Algoritmo", labels = c("Embrulho", "Graham"))
p
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubr()+xlab("n") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.text") + rremove("y.text") + rremove("ylab") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
gridExtra::grid.arrange(p,q,ncol =2)
fun.1 <- function(x) x^2
fun.2 <- function(x) x*log(x)
n = c(100000,
200000,
300000,
400000,
500000,
600000,
700000,
800000,
900000,
1000000)
wrap <- c(0.53,
1.20,
2.92,
3.60,
4.41,
5.89,
7.29,
8.85,
9.39,
10.31)
graham <- c(0.10,
0.29,
0.63,
0.93,
1.26,
1.85,
2.04,
2.22,
2.66,
2.96)
tempo <- tibble(n, wrap, graham)
p<- tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubclean() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Escalabilidade Empírica ") +
scale_color_discrete(name = "Algoritmo", labels = c("Embrulho", "Graham"))
p
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubr()+xlab("n") + ylab("Tempo") +
ggtitle("Escalabilidade Assintótica") +
rremove("x.text") + rremove("y.text") + rremove("ylab") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
q
gridExtra::grid.arrange(p,q,ncol =2)
p<- tempo %>% ggplot() + geom_point(aes(x = n, y = wrap, color = "blue")) +
geom_point(aes(x = n, y = graham, color = "green"))+
theme_pubclean() +
xlab("Tamanho da entrada") + ylab("Tempo (s)") + # Set axis labels
ggtitle("Tempo Empírico ") +
scale_color_discrete(name = "Algoritmo", labels = c("Embrulho", "Graham"))
q<- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
stat_function(linetype= "dashed",aes(color = "blue",),fun = fun.1) + stat_function(linetype= "dashed",aes(color = "red"), fun = fun.2) + xlim(0,10) +
theme_pubr()+xlab("n") + ylab("Tempo") +
ggtitle("Análise Assintótica") +
rremove("x.text") + rremove("y.text") + rremove("ylab") +
scale_color_discrete(name = "Complexidade", labels = c("O (n ²)","O(n log(n))"))
gridExtra::grid.arrange(p,q,ncol =2)
qpois
dpois(1,3.21)
1-dpois(2,3.21)
qpois(3,3.21, lower.tail = F)
qpois(3,3.21)
plot(qpois(x,3.21))
plot(qpois(seq(0:5),3.21))
plot(dpois(seq(0:5),3.21))
ppois(2,3.21)
1-ppois(2,3.21)
plot(ppois(seq(0:5),3.21)
)
1-qpois(2,3.21)
qpois(2,3.21)
plot(qpois(seq(0:5),3.21))
devtools::install_github('yihui/xaringan')
install.packages("devtools")
devtools::install_github('yihui/xaringan')
install.packages(c("pagedown", "xaringan"))
pagedown::chrome_print("apres.rmd")
setwd("~/20-02/SCC0652/05-proj-final")
pagedown::chrome_print("apres.rmd")
pagedown::chrome_print("apres.rmd")
